// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/bagasss3/go-weight/internal/model (interfaces: WeightRepository)

// Package mock is a generated GoMock package.
package mock

import (
	context "context"
	reflect "reflect"

	model "github.com/bagasss3/go-weight/internal/model"
	gomock "github.com/golang/mock/gomock"
)

// MockWeightRepository is a mock of WeightRepository interface.
type MockWeightRepository struct {
	ctrl     *gomock.Controller
	recorder *MockWeightRepositoryMockRecorder
}

// MockWeightRepositoryMockRecorder is the mock recorder for MockWeightRepository.
type MockWeightRepositoryMockRecorder struct {
	mock *MockWeightRepository
}

// NewMockWeightRepository creates a new mock instance.
func NewMockWeightRepository(ctrl *gomock.Controller) *MockWeightRepository {
	mock := &MockWeightRepository{ctrl: ctrl}
	mock.recorder = &MockWeightRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockWeightRepository) EXPECT() *MockWeightRepositoryMockRecorder {
	return m.recorder
}

// DeleteWeight mocks base method.
func (m *MockWeightRepository) DeleteWeight(arg0 context.Context, arg1 int64) (bool, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "DeleteWeight", arg0, arg1)
	ret0, _ := ret[0].(bool)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// DeleteWeight indicates an expected call of DeleteWeight.
func (mr *MockWeightRepositoryMockRecorder) DeleteWeight(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "DeleteWeight", reflect.TypeOf((*MockWeightRepository)(nil).DeleteWeight), arg0, arg1)
}

// GetAllWeights mocks base method.
func (m *MockWeightRepository) GetAllWeights(arg0 context.Context) ([]*model.Weight, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllWeights", arg0)
	ret0, _ := ret[0].([]*model.Weight)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllWeights indicates an expected call of GetAllWeights.
func (mr *MockWeightRepositoryMockRecorder) GetAllWeights(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllWeights", reflect.TypeOf((*MockWeightRepository)(nil).GetAllWeights), arg0)
}

// GetWeightByID mocks base method.
func (m *MockWeightRepository) GetWeightByID(arg0 context.Context, arg1 int64) (*model.Weight, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetWeightByID", arg0, arg1)
	ret0, _ := ret[0].(*model.Weight)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetWeightByID indicates an expected call of GetWeightByID.
func (mr *MockWeightRepositoryMockRecorder) GetWeightByID(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetWeightByID", reflect.TypeOf((*MockWeightRepository)(nil).GetWeightByID), arg0, arg1)
}

// Store mocks base method.
func (m *MockWeightRepository) Store(arg0 context.Context, arg1 *model.Weight) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Store", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Store indicates an expected call of Store.
func (mr *MockWeightRepositoryMockRecorder) Store(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Store", reflect.TypeOf((*MockWeightRepository)(nil).Store), arg0, arg1)
}

// UpdateWeight mocks base method.
func (m *MockWeightRepository) UpdateWeight(arg0 context.Context, arg1 int64, arg2 *model.Weight) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "UpdateWeight", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateWeight indicates an expected call of UpdateWeight.
func (mr *MockWeightRepositoryMockRecorder) UpdateWeight(arg0, arg1, arg2 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateWeight", reflect.TypeOf((*MockWeightRepository)(nil).UpdateWeight), arg0, arg1, arg2)
}
